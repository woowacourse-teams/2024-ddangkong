{"version":3,"file":"pages-ReadyPage-components-ReadyMembersContainer-ReadyMembersContainer-stories.06479147.iframe.bundle.js","mappings":";AAKA;AAGA;;;AAKA;;;;;AAOA;;;;;;AAMA;;;AAKA;;;;;;AAMA;;;AAKA;;;;;;AAQA;;;AAKA;;;;;;AAQA;;;;;;;;;;AC/CA;;;;;;;;;;;;;;AAcA;;;;;AAKA;AA0BA;;;;;;;AASA;AACA;;AASA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;AAqBA;;;;AAUA;AACA;;;;;AAKA;;AAEA;;AAEA;;;;;AAWA;;;;;AAKA;AAGA;;;;AAWA;;AAKA;AACA;;;;;;;;;;;;AC3JA;;;;;ACGA;;;;;;AAMA;;;;;;;;;;;;;;AAgBA;;;;;;;;AAUA;;;;AAMA;;;AAGA;;AAEA;;;AAKA;;;;AAMA;;;;;;;;;AAWA;;AAIA","sources":["webpack://ddangkong-frontend/./src/components/InviteModal/InviteModal.styled.ts","webpack://ddangkong-frontend/./src/components/common/Modal/Modal.styled.ts","webpack://ddangkong-frontend/./src/components/common/a11yOnly/A11yOnly.tsx","webpack://ddangkong-frontend/./src/pages/ReadyPage/components/ReadyMembersContainer/ReadyMembersContainer.styled.ts"],"sourcesContent":["import { css } from '@emotion/react';\n\nimport { Theme } from '@/styles/Theme';\n\nexport const inviteModalLayout = css`\n  background-color: ${Theme.color.peanut300};\n`;\n\nexport const inviteModalTitle = css`\n  font-size: 1.6rem;\n  text-align: center;\n`;\n\nexport const inviteModalUl = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 2rem;\n`;\n\nexport const qrcodeWrapper = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 20rem;\n  border-radius: ${Theme.borderRadius.radius10};\n\n  background-color: white;\n`;\n\nexport const inviteModalLi = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.8rem;\n  padding: 0.8rem;\n  border-radius: ${Theme.borderRadius.radius10};\n\n  background-color: #ffff;\n`;\n\nexport const inviteModalLinkButton = css`\n  width: 100%;\n  padding: 1.6rem 0.4rem;\n  background: none;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const inviteModalLinkButtonInfoWrapper = css`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const inviteModalText = css`\n  overflow: hidden;\n  width: 95%;\n\n  font-size: 1.4rem;\n  text-overflow: ellipsis;\n`;\n\nexport const inviteModalCopyIcon = css`\n  width: 10%;\n`;\n","import { css } from '@emotion/react';\n\nimport { ModalProps } from './Modal';\n\nimport { Theme } from '@/styles/Theme';\n\nexport const modalBackdropLayout = css`\n  display: flex;\n  position: fixed;\n  justify-content: center;\n  align-items: center;\n\n  background-color: rgb(0 0 0 / 50%);\n  inset: 0;\n`;\n\nexport const modalContentWrapper = ({ position }: Pick<ModalProps, 'position'>) => css`\n  display: flex;\n  position: fixed;\n  left: 50%;\n  flex-direction: column;\n  gap: 1.6rem;\n  width: 28rem;\n  height: fit-content;\n  max-height: 70vh;\n  min-height: 1.2rem;\n  transform: translateX(-50%);\n  margin: 0;\n  padding: 2.4rem;\n  border: none;\n  border-radius: ${Theme.borderRadius.radius10};\n\n  background-color: white;\n  box-sizing: border-box;\n\n  ${(() => {\n    switch (position) {\n      case 'top':\n        return `\n          top: 0;\n          transform: translate(-50%, 0%);\n        `;\n      case 'bottom':\n        return `\n          bottom: 0;\n          transform: translate(-50%, 0%);\n        `;\n      case 'center':\n        return `\n          top: 50%;\n          transform: translate(-50%, -50%);\n        `;\n      default:\n        return `\n          top: 50%;\n          transform: translate(-50%, -50%);\n        `;\n    }\n  })()}\n`;\n\nexport const modalHeaderLayout = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n\n  font-weight: bold;\n`;\n\nexport const modalHeaderEmptyBox = (position: 'center' | 'left') => css`\n  display: ${position === 'center' ? 'block' : 'none'};\n  width: 1.6rem;\n`;\n\ninterface ModalTitleProps {\n  fontSize?: string;\n  fontWeight?: string;\n}\n\nexport const modalTitle = ({ fontSize = 'bold', fontWeight = '2rem' }: ModalTitleProps) => css`\n  font-weight: ${fontWeight};\n  font-size: ${fontSize};\n`;\n\nexport const modalIconButton = ({ imgSize = '1.6rem' }: { imgSize?: string }) => css`\n  width: ${imgSize};\n  height: ${imgSize};\n  padding: 0;\n  border: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  img {\n    width: 100%;\n  }\n`;\n\ninterface ModalTextButtonProps {\n  buttonWidth?: string;\n  buttonHeight?: string;\n  fontSize?: string;\n  backgroundColor?: string;\n  fontColor?: string;\n}\n\nexport const modalTextButton = ({\n  buttonWidth = '100%',\n  buttonHeight = '100%',\n  fontSize = '1.6rem',\n  backgroundColor = Theme.color.peanut400,\n  fontColor = '#000000',\n}: ModalTextButtonProps) => css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${buttonWidth};\n  height: ${buttonHeight};\n  padding: 1rem;\n  border: none;\n  border-radius: 0.8rem;\n\n  background-color: ${backgroundColor};\n\n  color: ${fontColor};\n  font-weight: bold;\n  font-size: ${fontSize};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\ninterface ModalContentProps {\n  fontSize?: string;\n}\n\nexport const modalContentLayout = ({ fontSize = '1.2rem' }: ModalContentProps) => css`\n  * {\n    box-sizing: border-box;\n  }\n\n  font-size: ${fontSize};\n`;\n\nexport const modalInputLayout = css`\n  width: 100%;\n  padding: 0.8rem;\n  border: 1px solid #000;\n`;\n\ninterface ModalFooterProps {\n  buttonPosition?: 'left' | 'center' | 'right';\n  buttonGap?: string;\n}\n\nexport const modalFooter = ({\n  buttonPosition = 'center',\n  buttonGap = '1.2rem',\n}: ModalFooterProps) => css`\n  display: flex;\n  justify-content: ${buttonPosition};\n  gap: ${buttonGap};\n`;\n","import { ElementType, AriaRole, PropsWithChildren } from 'react';\n\nimport { a11yOnlyLayout } from './A11yOnly.styled';\n\ninterface A11yOnlyProps<T extends ElementType = 'span'> {\n  as?: T;\n  role?: AriaRole;\n}\n\nconst A11yOnly = <T extends ElementType = 'span'>({\n  as,\n  children,\n  ...props\n}: PropsWithChildren<A11yOnlyProps<T>>) => {\n  const Component = as || 'span';\n  return (\n    <Component css={a11yOnlyLayout} {...props}>\n      {children}\n    </Component>\n  );\n};\n\nexport default A11yOnly;\n","import { css } from '@emotion/react';\n\nimport { Theme } from '@/styles/Theme';\nimport getBorderRadius from '@/styles/utils/getBorderRadius';\n\nexport const readyMembersContainerLayout = css`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n`;\n\nexport const membersContainer = css`\n  position: relative;\n  height: 25rem;\n  padding: 2rem 3rem 0;\n  border-radius: 2rem;\n\n  background-color: ${Theme.color.peanut300};\n\n  font-weight: 600;\n  font-size: 1rem;\n\n  overflow-y: scroll;\n\n  /* 스크롤바 숨기기 */\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n`;\n\nexport const totalNumber = css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 2rem;\n\n  font-weight: 900;\n  font-size: 2rem;\n`;\n\nexport const memberList = css`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nexport const inviteButton = css`\n  width: 12rem;\n  height: 4rem;\n  border-radius: ${getBorderRadius('medium')};\n\n  background-color: ${Theme.color.peanut400};\n\n  font-weight: 700;\n`;\n\nexport const memberItem = css`\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n`;\n\nexport const profileBox = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 3.6rem;\n  height: 3.6rem;\n  border-radius: 50%;\n\n  background-color: white;\n`;\n\nexport const profileImage = css`\n  width: 60%;\n`;\n\nexport const memberStatus = css`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  align-items: center;\n`;\n"],"names":[],"sourceRoot":""}